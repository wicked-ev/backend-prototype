// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  email String @unique
  createdAt DateTime @default(now())
  firstName String
  lastName  String
  BloodType String
  hash String
  Devices Device[]
  AccountPreviewRequest PreviewerList[]
  Account accounts?
  @@map("Users")
} 

model Device {
  Sid        Int @id @default(autoincrement())
  activateCode Int @unique
  createdAt DateTime @default(now())
  ownerID Int?
  owner Users? @relation(fields: [ownerID], references: [id])
  @@map("Devices")
}

model accounts {
  AccId Int @id @default(autoincrement())
  AccountOwner Int @unique
  accountowner Users @relation(fields: [AccountOwner], references: [id])
  HeartRecord Heart_Rate_Record?
  AutherizedPreviewers PreviewerList?
}
model PreviewerList {
  id Int @id @default(autoincrement())
  PreviewedId Int @unique
  state String
  previewed accounts @relation(fields: [PreviewedId], references: [AccId])
  PreviewerId Int
  previewer Users @relation(fields: [PreviewerId], references: [id])
}

model Heart_Rate_Record {
  Rid      Int @id @default(autoincrement())
  RateValue   Int
  timeStamp   DateTime
  AutherDevice Int
  OwnerID Int @unique
  owner accounts @relation(fields: [OwnerID], references: [AccId])
}